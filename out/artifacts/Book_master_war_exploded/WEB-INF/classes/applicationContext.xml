<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="DriverClass" value="${jdbc.driverClass}"></property>
		<property name="JdbcUrl" value="${jdbc.url}"></property>   
		<property name="User" value="${jdbc.username}"></property>
		<property name="Password" value="${jdbc.password}"></property> 	
		<property name="testConnectionOnCheckin" value="true"></property> 	
		<property name="idleConnectionTestPeriod" value="60"></property> 	
    </bean>
    
    <!-- 配置hibernate相关属性 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    	<!-- 注入连接池 -->
    	<property name="dataSource" ref="dataSource"></property>
    	<!-- hibernate属性 -->
    	<property name="hibernateProperties">
    		<props>
    			<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
    			<prop key="hibernate.show_sql">true</prop>
    			<prop key="hibernate.format_sql">true</prop>
    			<prop key="hibernate.hbm2ddl.auto">update</prop>
    			<prop key="hibernate.autoReconnect">true</prop>
    		</props>
    	</property>
    	<!-- 加载映射文件 -->
    	<property name="mappingResources">
    		<list>
    			<value>entity/User.hbm.xml</value>
    			<value>entity/Data.hbm.xml</value>
    			<value>entity/Book.hbm.xml</value>
    		</list>
    	</property>
    </bean>
    <!-- action -->
    <bean id="userAction" class="action.UserAction" scope="prototype">
    	<property name="userService" ref="userService"></property>
    </bean>
    
    <bean id="bookAction" class="action.BookAction" scope="prototype">
    	<property name="bookService" ref="bookService"></property>
    </bean>
    
    <bean id="dataAction" class="action.DataAction" scope="prototype">
    	<property name="dataService" ref="dataService"></property>
    </bean>
    
    <!-- service -->
    
    <bean id="userService" class="service.UserService">
    	<property name="userDao" ref="userDao"></property>
    </bean>
     <bean id="dataService" class="service.DataService">
    	<property name="dataDao" ref="dataDao"></property>
    	<property name="bookDao" ref="bookDao"></property>
    	<property name="userDao" ref="userDao"></property>
    </bean>
     <bean id="bookService" class="service.BookService">
    	<property name="bookDao" ref="bookDao"></property>
    </bean>
    
    <!-- dao -->
    <bean id="userDao" class="dao.UserDao">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="bookDao" class="dao.BookDao">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="dataDao" class="dao.DataDao">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- tx -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 开启注解tx -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
</beans>